1. Arrrive on landing
  OPTIONS:
    register or log in 
    share website on:
      -pinterest 
      -twitter 
      -facebook

2. Register or Log In

3. User Home 
  OPTIONS:
    create a new pattern 
    click an already existing pattern memo/link

4. Clicked Pattern Page
  OPTIONS:
    nav button for _ create a new pattern
    nav button for _ edit the pattenr on the page
    nav button for _ projects in progress 

    pattern link for _ current pattern original link
    
    step button for _ open counter 
    step button for _ close counter 

    text area to add notes

    button for _ delete pattern


FLOW For Each Component: 
  HTML/CSS => ERD => React-ify your HTML => Convert static HTML to generating via data in state => Generate Scaffolds => Use fetch/axios to populate state

  Then--
    **list - show - delete - create - update**


-1-
change hard coded data in react app to be data pulled from state.
-2-
created a rails new api w/ a database
  rails new appName --skip-spring --database postgresql --api
  cd into folder & run 'bundle install'
  run 'rails db:create'
-3-
scaffold a model/view/controller for one the tables 
  rails generate scaffold pattern pattern_name:string
confirm accuracy 
run 'rails db:migrate'
run 'rails server'
-4-
add data through postman before switching out the hard coded state to a fetch/axios call....
  POSTMAN--
    {
      "pattern": {
        "pattern_name": "Bar Hat"
      }
    }
-5-
install axios with 'yarn add axios' in the CLIENT folder.
clear out the old data in preparation for the api.
  state = {
    patterns: [

    ]
  }
-6-
i ran into a cors issue, so i did the steps to add rack-cors from the handbook of merge.
-7-
added moment.js yarn add moment pckg in the CLIENT folder for date formatting. 
  import moment from 'moment'
  <h2>{pattern.pattern_name} <span> Initiated on {moment(pattern.created_at).format("MMM Do YYYY")}</span>
  
  per the moment documentation - https://momentjs.com/
-8-
it was discussed that now that the API and component memos have been completed, i should follow the flow of -> 
    **list - show - delete - create - update**
  Now that i've created the list of projects, I need to work on 'show'-ing each pattern detail pg. 
-9-
add react router 
  'yarn add react-router-dom' in the CLIENT folder
  in the main app.js file add: import { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom'

  in the class add <Router></Router> code
  *moved the HomeProfile page to the pages folder - refactoring 
-10-
In the process of switching the pages over to be included with router, next step in the flow is to show each pattern & Linking that up.

On the pattern page - Go back to step 1. and change hard coded data in react app to be data pulled from state. Looked at ERD for structure of the state/db. found out it was wrong, gavin redid it and i filled out the rest looking at the html from what was on the page.

....I now see why they say you're supposed to spend more time planning than coding. i def could have planned this out better and completed more css/behavior before adding the dynamic data....









TODO:
Log In - Auth0 / log out
show pattern
create new pattern / delete

deploy the app